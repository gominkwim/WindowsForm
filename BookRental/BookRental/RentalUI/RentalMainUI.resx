<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>